* TF
** Startup common projects
#+begin_src emacs-lisp :tangle ~/.emacs.d/tf.el
  (defun tf/start-express () "" (interactive)
         (other-frame 1)
         (shell "local-express-shell")
         (insert "n") ;; answer stupid zsh prompt
         (comint-send-input) ;; press enter
         (insert "nvm use 14")
         (comint-send-input)
         (insert "cd ~/src/local-express/ && node main.js")
         (comint-send-input)
         (other-frame 1))
  #+end_src

#+begin_src emacs-lisp :tangle ~/.emacs.d/tf.el
  (defun tf/start-dashboard () "" (interactive)
         (other-frame 1)
         (shell "dashboard-shell")
         (insert "n") ;; answer stupid zsh prompt
         (comint-send-input) ;; press enter
         (insert "nvm use 12")
         (comint-send-input)
         (insert "cd ~/src/dashboard-ui/ && npm run kube")
         (comint-send-input)
         (other-frame 1))
  #+end_src

#+begin_src emacs-lisp :tangle ~/.emacs.d/tf.el
  (defun tf/start-review () "" (interactive)
         (other-frame 1)
         (shell "review-shell")
         (insert "n") ;; answer stupid zsh prompt
         (comint-send-input) ;; press enter
         (insert "nvm use 14")
         (comint-send-input)
         (insert "cd ~/src/review-ui && npm run build:watch")
         (comint-send-input)
         (other-frame 1))
  #+end_src

#+begin_src emacs-lisp :tangle ~/.emacs.d/tf.el
  (defun tf/start-tf-ng-workspace/library () "" (interactive)
         (other-frame 1)
         (shell "tf-ng-shell")
         (insert "n") ;; answer stupid zsh prompt
         (comint-send-input) ;; press enter
         (insert "nvm use 14")
         (comint-send-input)
         (insert "cd ~/src/tf-ng-workspace && npm run dev")
         (comint-send-input)
         (other-frame 1))
  #+end_src

** Org Jira
#+begin_src emacs-lisp :tangle ~/.emacs.d/tf.el
(use-package org-jira)
(setq jiralib-url "https://educopiallc.atlassian.net")
#+end_src

#+begin_src emacs-lisp :tangle ~/.emacs.d/tf.el
  (defun tf/jira-kanban-board-by-fixversion (fixversion)
    "Clear local tickets and call org jira by fix version the show the agenda"
    (interactive (list (read-string "Fixversion ID: " ""
                                    'org-jira-fixversion-id-history)))
    (find-file "~/.org-jira/PLATFORM.org")
    (erase-buffer)
    (org-jira-get-issues (org-jira-get-issue-by-fixversion fixversion))
    (org-agenda)
    (delete-other-windows))
#+end_src

